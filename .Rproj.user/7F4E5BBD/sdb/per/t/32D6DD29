{
    "contents" : "# This reads a tab-delimited file spit out by the Statistics Extraction tool from Net Station.\n# In the raw file, the first 6 rows and the rows below the condition names contain metadata \n# such as montage, time window, \n# You'd be wise in opening this raw file first before running this script.\n# Triple hashes mean change something on that line!\n\n# install.packages(\"reshape\") ### Un-comment in if you don't have the reshape package.\n\nextract <- read.delim(\"statsExtract/example-net-station-statistics-extraction-file.xls\", ### Read table extracted from Net Station\n                      skip=6, # Skip metadata that spans 6 rows; adjust if different\n                      header=T, row.names=NULL)\ntable <- extract[-c(1),] #Drop first row containing montage metadata\n\ntable$X <- substr(table$X, # Get subject/session IDs from column named \"X\" \n                  15,19) ### May ignore this command if subject IDs ok or change start-end index numbers to extract different substring\ntable$X = table$X # Reassign the rightly-named column\ncolnames(table)[which(names(table)==\"X\")] <- \"Subject\" # Rename column X as \"Subject\"\n\nView(table) # Check if all observations are there\n\nrequire(reshape)\nmelted <- melt(table,\n               id=c(\"Subject\")) # Melt the table df so that all DVs are in column, \n                                # condition names in another column. Subject is identifier.\n\n# Now let's mess with the strings of the condition name columns\nmelted$ConditionsSpaced <- gsub('([[:upper:]])', ' \\\\1', melted$variable) #Separate with spaces until you hit capital letters\nmelted$splat <- strsplit(melted$ConditionsSpaced, split=\" \") #Split the string by spaces. Splat is past tense for split, duh.\n                                                            # This makes it a weird list with the conditions in one cell though.\nmat <- matrix(unlist(melted$splat), ncol=3, byrow=T) # Turn the splat list into a matrix with 3 columns\nmat <- mat[,-1] # Drop empty first column that was occupied by a space \" \" when it was assigned to \"splat\" above\ndf <- as.data.frame(mat) # Turn the matrix into an actionable dataframe\nmelted <- cbind(df, melted) # Combine the actionable dataframe with the original melted table\n                            # You will have two columns named V1 and V2 since R doesn't know what to call them\n\n\nView(melted) # Check that ConditionsSpaced matches up with the two factors it was made from\nmelted <- subset(melted, select=-c(variable, ConditionsSpaced, splat)) # Then drop unnecessary columns\n\n# Rename your factors as your actual conditions or something generic\n# Check your dataframe first to be sure you're renaming columns right\nnames(melted)[names(melted)==\"V1\"] = \"cond1\" ### Change condition name\nnames(melted)[names(melted)==\"V2\"] = \"cond2\" ### Change condition name\n\nrm(df, extract, mat) # Clean yo mess up\n# You should now have two dataframes: table which is unfactorized, melted which is factorized\n# You will use melted for the statistics in tests.R and making bar graphs. table is \n# left there in case you want to do something else with it or write it as a csv.",
    "created" : 1443049446400.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1062214555",
    "id" : "32D6DD29",
    "lastKnownWriteTime" : 1443049489,
    "path" : "~/Dropbox/PottsLab/stats templates/erp statistics/reshapeData.R",
    "project_path" : "reshapeData.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}